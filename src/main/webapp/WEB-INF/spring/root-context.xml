<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->

	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="dataSourceSpied" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@13.209.144.89:1521:orcl"/>
		<property name="username" value="onepart1"/>
		<property name="password" value="onepart1"/>
		<property name="defaultAutoCommit" value="false"/>
	</bean>

	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSourceSpied" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="" />
			</bean>
		</property>
	</bean>

		<!-- 트렌젝션 매니저 bean 등록 -->
	<bean id="transactionManager"
	class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<!-- 어노테이션으로 트랜잭션 매니져를 사용하기 위해 추가하는 설정  -->
	<tx:annotation-driven transaction-manager="transactionManager"/>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true" rollback-for="Exception"/>
			<tx:method name="insert*" rollback-for="Exception"
				propagation="REQUIRED" isolation="SERIALIZABLE"/>
			<tx:method name="update*" rollback-for="Exception"
				propagation="REQUIRED" isolation="SERIALIZABLE"/>
			<tx:method name="delete*" rollback-for="Exception"
				propagation="REQUIRED" isolation="SERIALIZABLE"/>
		</tx:attributes>
	</tx:advice>

	<!-- AOP를 이용하여 위의 txAdvice의 적용할 위치를 등록해주어야 한다. -->
	<!-- pointcut과 advisor 묶어주는거야 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression="execution(* com.kh.onepart..*ServiceImpl.*(..))"/>
		<aop:advisor id="transactionAdvisor" pointcut-ref="serviceMethod"
			advice-ref="txAdvice"/>
	</aop:config>

</beans>
